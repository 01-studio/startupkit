// schema.prisma

datasource db {
  provider = "postgresql" // or another provider if not using PostgreSQL
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Enum definitions
enum PricingType {
  ONE_TIME
  RECURRING
}

enum PricingPlanInterval {
  day
  week
  month
  year
}

enum SubscriptionStatus {
  trialing
  active
  canceled
  incomplete
  incomplete_expired
  past_due
  unpaid
  paused
}

// Table definitions
model User {
  id             String         @id @default(uuid())
  workOSId       String         @unique
  firstName      String?
  lastName       String?
  email          String
  avatarUrl      String?
  billingAddress Json?
  paymentMethod  Json?
  customers      Customer[]
  subscriptions  Subscription[]
}

model Customer {
  id               String @id
  stripeCustomerId String
  user             User   @relation(fields: [id], references: [id])
}

model Product {
  id          String  @id
  active      Boolean
  name        String
  description String?
  image       String?
  metadata    Json?
  prices      Price[]
}

model Price {
  id              String              @id
  productId       String
  active          Boolean
  description     String?
  unitAmount      Int
  currency        String
  type            PricingType
  interval        PricingPlanInterval
  intervalCount   Int
  trialPeriodDays Int?
  metadata        Json?
  product         Product             @relation(fields: [productId], references: [id])
  subscriptions   Subscription[]
}

model Subscription {
  id                 String             @id
  userId             String
  status             SubscriptionStatus
  metadata           Json?
  priceId            String
  quantity           Int
  cancelAtPeriodEnd  Boolean
  created            DateTime           @default(now())
  currentPeriodStart DateTime           @default(now())
  currentPeriodEnd   DateTime           @default(now())
  endedAt            DateTime?
  cancelAt           DateTime?
  canceledAt         DateTime?
  trialStart         DateTime?
  trialEnd           DateTime?
  user               User               @relation(fields: [userId], references: [id])
  price              Price              @relation(fields: [priceId], references: [id])
}
